[{"D:\\Tirutsava2021\\client\\src\\index.js":"1","D:\\Tirutsava2021\\client\\src\\App.js":"2","D:\\Tirutsava2021\\client\\src\\reportWebVitals.js":"3","D:\\Tirutsava2021\\client\\src\\store\\reducers\\rootReducer.js":"4","D:\\Tirutsava2021\\client\\src\\Routes.js":"5","D:\\Tirutsava2021\\client\\src\\config\\keys.js":"6","D:\\Tirutsava2021\\client\\src\\store\\actions\\index.js":"7","D:\\Tirutsava2021\\client\\src\\components\\navbar\\Navbar.js":"8","D:\\Tirutsava2021\\client\\src\\store\\reducers\\auth.js":"9","D:\\Tirutsava2021\\client\\src\\store\\reducers\\notify.js":"10","D:\\Tirutsava2021\\client\\src\\components\\notifications\\index.js":"11","D:\\Tirutsava2021\\client\\src\\store\\actions\\notify.js":"12","D:\\Tirutsava2021\\client\\src\\components\\navbar\\SideDrawer.js":"13","D:\\Tirutsava2021\\client\\src\\components\\navbar\\Toolbar.js":"14","D:\\Tirutsava2021\\client\\src\\store\\actions\\auth.js":"15","D:\\Tirutsava2021\\client\\src\\pages\\Sponsors\\Sponsors.js":"16","D:\\Tirutsava2021\\client\\src\\pages\\ContactUs\\ContactUs.js":"17","D:\\Tirutsava2021\\client\\src\\pages\\Faqs\\Faqs.js":"18","D:\\Tirutsava2021\\client\\src\\pages\\Homepage\\Homepage.js":"19","D:\\Tirutsava2021\\client\\src\\store\\actions\\actionTypes.js":"20","D:\\Tirutsava2021\\client\\src\\store\\reducers\\helper.js":"21","D:\\Tirutsava2021\\client\\src\\pages\\Events\\EventsPage.js":"22","D:\\Tirutsava2021\\client\\src\\components\\navbar\\Burger.js":"23","D:\\Tirutsava2021\\client\\src\\pages\\ContactUs\\Team.js":"24","D:\\Tirutsava2021\\client\\src\\pages\\Faqs\\Header.js":"25","D:\\Tirutsava2021\\client\\src\\pages\\Faqs\\Faq.js":"26","D:\\Tirutsava2021\\client\\src\\components\\Registration\\Registration.js":"27","D:\\Tirutsava2021\\client\\src\\pages\\Sponsors\\SponsorDetails\\SponsorDetail.js":"28","D:\\Tirutsava2021\\client\\src\\pages\\ContactUs\\TeamDetails\\TeamDetails.js":"29","D:\\Tirutsava2021\\client\\src\\components\\HomepagePhone\\homepage.phone.js":"30","D:\\Tirutsava2021\\client\\src\\pages\\Events\\Event.js":"31","D:\\Tirutsava2021\\client\\src\\components\\Registration\\list.js":"32","D:\\Tirutsava2021\\client\\src\\pages\\Faqs\\searchbar\\search.js":"33","D:\\Tirutsava2021\\client\\src\\pages\\ContactUs\\TeamDetails\\MemberImage\\MemberImage.js":"34","D:\\Tirutsava2021\\client\\src\\pages\\Merch\\Merch.js":"35","D:\\Tirutsava2021\\client\\src\\pages\\Merch\\Form.js":"36","D:\\Tirutsava2021\\client\\src\\pages\\Merch\\Preview.js":"37","D:\\Tirutsava2021\\client\\src\\pages\\Sponsors\\SponsorDetails\\MemberImage\\SponsorImage.js":"38","D:\\Tirutsava2021\\client\\src\\pages\\Sponsors\\SponsorsInfo.js":"39","D:\\Tirutsava2021\\client\\src\\pages\\proshows\\Proshows.js":"40","D:\\Tirutsava2021\\client\\src\\pages\\proshows\\Proshow.js":"41"},{"size":1019,"mtime":1610648658805,"results":"42","hashOfConfig":"43"},{"size":1960,"mtime":1610648658801,"results":"44","hashOfConfig":"43"},{"size":375,"mtime":1609312020263,"results":"45","hashOfConfig":"43"},{"size":252,"mtime":1610648658814,"results":"46","hashOfConfig":"43"},{"size":1276,"mtime":1613826785617,"results":"47","hashOfConfig":"43"},{"size":49,"mtime":1611338998788,"results":"48","hashOfConfig":"43"},{"size":143,"mtime":1610953763751,"results":"49","hashOfConfig":"43"},{"size":913,"mtime":1610780628147,"results":"50","hashOfConfig":"43"},{"size":986,"mtime":1610954507028,"results":"51","hashOfConfig":"43"},{"size":867,"mtime":1610648658814,"results":"52","hashOfConfig":"43"},{"size":921,"mtime":1610648658804,"results":"53","hashOfConfig":"43"},{"size":653,"mtime":1610648658813,"results":"54","hashOfConfig":"43"},{"size":1496,"mtime":1613827180538,"results":"55","hashOfConfig":"43"},{"size":2709,"mtime":1613827139457,"results":"56","hashOfConfig":"43"},{"size":821,"mtime":1610954516089,"results":"57","hashOfConfig":"43"},{"size":4454,"mtime":1613544345492,"results":"58","hashOfConfig":"43"},{"size":3332,"mtime":1613411064319,"results":"59","hashOfConfig":"43"},{"size":5997,"mtime":1613411104253,"results":"60","hashOfConfig":"43"},{"size":7030,"mtime":1614271737795,"results":"61","hashOfConfig":"43"},{"size":217,"mtime":1610953748840,"results":"62","hashOfConfig":"43"},{"size":142,"mtime":1610648658814,"results":"63","hashOfConfig":"43"},{"size":17917,"mtime":1614102613508,"results":"64","hashOfConfig":"43"},{"size":451,"mtime":1610390474787,"results":"65","hashOfConfig":"43"},{"size":2058,"mtime":1610693423381,"results":"66","hashOfConfig":"43"},{"size":656,"mtime":1613411110304,"results":"67","hashOfConfig":"43"},{"size":591,"mtime":1610648658808,"results":"68","hashOfConfig":"43"},{"size":9950,"mtime":1610954575160,"results":"69","hashOfConfig":"43"},{"size":981,"mtime":1613545479137,"results":"70","hashOfConfig":"43"},{"size":680,"mtime":1610648658807,"results":"71","hashOfConfig":"43"},{"size":4145,"mtime":1613827104039,"results":"72","hashOfConfig":"43"},{"size":10081,"mtime":1614102527896,"results":"73","hashOfConfig":"43"},{"size":16086,"mtime":1610648658803,"results":"74","hashOfConfig":"43"},{"size":667,"mtime":1610648658810,"results":"75","hashOfConfig":"43"},{"size":1282,"mtime":1610648658807,"results":"76","hashOfConfig":"43"},{"size":6373,"mtime":1613411133192,"results":"77","hashOfConfig":"43"},{"size":861,"mtime":1612545532905,"results":"78","hashOfConfig":"43"},{"size":1603,"mtime":1611338991190,"results":"79","hashOfConfig":"43"},{"size":1220,"mtime":1613826602587,"results":"80","hashOfConfig":"43"},{"size":4447,"mtime":1614242847895,"results":"81","hashOfConfig":"43"},{"size":3666,"mtime":1613841054393,"results":"82","hashOfConfig":"43"},{"size":3450,"mtime":1613841006691,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"oaj2bf",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"86"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"86"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"86"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"86"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"86"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"86"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"86"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"86"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"86"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"86"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"86"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"D:\\Tirutsava2021\\client\\src\\index.js",[],["178","179"],"D:\\Tirutsava2021\\client\\src\\App.js",[],"D:\\Tirutsava2021\\client\\src\\reportWebVitals.js",[],"D:\\Tirutsava2021\\client\\src\\store\\reducers\\rootReducer.js",[],"D:\\Tirutsava2021\\client\\src\\Routes.js",["180"],"// react-router and react-router-dom logic goes here\r\n// separate routes file will help in ssr later (if implemented)\r\n\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport Sponsors from './pages/Sponsors/Sponsors';\r\nimport FAQs from './pages/Faqs/Faqs';\r\nimport ContactUs from './pages/ContactUs/ContactUs';\r\nimport Events from './pages/Events/EventsPage';\r\nimport HomePage from './pages/Homepage/Homepage';\r\nimport MerchPage from \"./pages/Merch/Merch\";\r\nimport ProshowsPage from \"./pages/proshows/Proshows\";\r\n\r\n// import Legacy from \"./pages/tirutsavaLegacy/TirutsavaLegacy\";\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div>\r\n            <Route exact path=\"/\"><Redirect to=\"/home\" /></Route>\r\n            <Route exact path=\"/home\" exact component={HomePage}></Route>\r\n            <Route path=\"/sponsors\" exact  component={Sponsors} />\r\n            <Route path=\"/faqs\" exact component={FAQs} />\r\n            <Route path=\"/contactus\" exact  component={ContactUs} />\r\n            <Route path=\"/events\" component={Events} />\r\n            <Route path=\"/merch\" component={MerchPage} />\r\n            <Route path=\"/proshows\" component={ProshowsPage} />\r\n            {/* <Route path=\"/aboutus\" component={Legacy} /> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Routes;","D:\\Tirutsava2021\\client\\src\\config\\keys.js",[],"D:\\Tirutsava2021\\client\\src\\store\\actions\\index.js",[],"D:\\Tirutsava2021\\client\\src\\components\\navbar\\Navbar.js",[],"D:\\Tirutsava2021\\client\\src\\store\\reducers\\auth.js",[],"D:\\Tirutsava2021\\client\\src\\store\\reducers\\notify.js",[],"D:\\Tirutsava2021\\client\\src\\components\\notifications\\index.js",[],"D:\\Tirutsava2021\\client\\src\\store\\actions\\notify.js",[],"D:\\Tirutsava2021\\client\\src\\components\\navbar\\SideDrawer.js",[],"D:\\Tirutsava2021\\client\\src\\components\\navbar\\Toolbar.js",[],"D:\\Tirutsava2021\\client\\src\\store\\actions\\auth.js",[],"D:\\Tirutsava2021\\client\\src\\pages\\Sponsors\\Sponsors.js",[],"D:\\Tirutsava2021\\client\\src\\pages\\ContactUs\\ContactUs.js",[],"D:\\Tirutsava2021\\client\\src\\pages\\Faqs\\Faqs.js",[],"D:\\Tirutsava2021\\client\\src\\pages\\Homepage\\Homepage.js",["181"],"D:\\Tirutsava2021\\client\\src\\store\\actions\\actionTypes.js",[],"D:\\Tirutsava2021\\client\\src\\store\\reducers\\helper.js",[],"D:\\Tirutsava2021\\client\\src\\pages\\Events\\EventsPage.js",["182","183","184"],"import { BottomNavigation, BottomNavigationAction, makeStyles } from '@material-ui/core';\r\nimport { CancelPresentationOutlined } from '@material-ui/icons';\r\nimport axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Event from './Event';\r\nimport './EventsPage.css';\r\nimport * as actions from '../../store/actions';\r\nimport { connect } from 'react-redux';\r\nimport url from 'url';\r\nimport { MDBContainer, MDBModal, MDBModalBody, MDBModalHeader } from 'mdbreact';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 500,\r\n        backgroundColor: \"#1e1534\"\r\n    },\r\n\r\n    switchTab: {\r\n        width: 500,\r\n        backgroundColor: \"transparent\"\r\n    }\r\n});\r\n\r\nconst EventsPage = props => {\r\n    const categories = [\r\n        {\r\n            id: 0,\r\n            type: \"Pre Fest\",\r\n            vid: \"/bg_vid/squares-back-vid.mp4\"\r\n        },\r\n        {\r\n            id: 1,\r\n            type: \"Workshops\",\r\n            vid: \"/bg_vid/online-back-vid.mp4\"\r\n        },\r\n        {\r\n            id: 2,\r\n            type: \"Cultural\",\r\n            vid: \"/bg_vid/cult-back-vid.mp4\"\r\n        },\r\n        {\r\n            id: 3,\r\n            type: \"Technical\",\r\n            vid: \"/bg_vid/tech-back-vid.mp4\"\r\n        },\r\n        {\r\n            id: 4,\r\n            type: \"Literary\",\r\n            vid: \"/bg_vid/letters-back-vid.mp4\"\r\n        }\r\n    ];\r\n\r\n    const [cat, setCat] = useState(0);\r\n\r\n    useEffect(() => {\r\n        // console.log(props.history)\r\n        switch (props.history.location.pathname) {\r\n            case \"/events/prefest\":\r\n                setCat(0);\r\n                break;\r\n            case \"/events/workshops\":\r\n                setCat(1);\r\n                break;\r\n            case \"/events/cultural\":\r\n                setCat(2);\r\n                break;\r\n            case \"/events/technical\":\r\n                setCat(3);\r\n                break;\r\n            case \"/events/literary\":\r\n                setCat(4);\r\n                break;\r\n            default:\r\n                setCat(0);\r\n                props.history.push(\"/events/prefest\");\r\n        }\r\n    }, [props.history]);\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleUrl = (newValue) => {\r\n        switch (newValue) {\r\n            case 0:\r\n                props.history.push(\"/events/prefest\");\r\n                break;\r\n            case 1:\r\n                props.history.push(\"/events/workshops\");\r\n                break;\r\n            case 2:\r\n                props.history.push(\"/events/cultural\");\r\n                break;\r\n            case 3:\r\n                props.history.push(\"/events/technical\");\r\n                break;\r\n            case 4:\r\n                props.history.push(\"/events/literary\");\r\n                break;\r\n            default:\r\n                props.history.push(\"/events/prefest\");\r\n        }\r\n    }\r\n\r\n    const [viewEvent, setViewEvent] = useState(null);\r\n\r\n    const handleClose = () => {\r\n        // console.log(\"pressed close\");\r\n        setViewEvent(null);\r\n    }\r\n\r\n    const [events, setEvents] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [err, setErr] = useState(null);\r\n    const [registerLoader, setRegisterLoader] = useState(false);\r\n    const [registeredIds, setRegisteredIds] = useState([]);\r\n    const [paymentSuccess, setPaymentSuccess] = useState([false, null]);\r\n    const [registerForId, setRegisterForId] = useState([false, null, null, null]);\r\n\r\n    const handleRegister = (eventId, eventNo) => {\r\n        let eventType = \"prefest\";\r\n        switch (cat) {\r\n            case 0:\r\n                eventType = \"prefest\";\r\n                break;\r\n            case 1:\r\n                eventType = \"workshops\";\r\n                break;\r\n            case 2:\r\n                eventType = \"cultural\";\r\n                break;\r\n            case 3:\r\n                eventType = \"technical\";\r\n                break;\r\n            case 4:\r\n                eventType = \"literary\";\r\n                break;\r\n            default:\r\n\r\n        }\r\n        // console.log(\"pinging\", `/api/events/register/${props.tokenId}/${eventId}`);\r\n        setRegisterLoader(true);\r\n        axios.post(`/api/events/register/${props.tokenId}/${props.googleId}/${eventId}`, {\r\n            eventType: eventType,\r\n            eventNo: eventNo\r\n        })\r\n            .then(res => {\r\n                // console.log(res);\r\n                if (res.data.redirectUrl) {\r\n                    window.location.href = res.data.redirectUrl\r\n                }\r\n                else {\r\n                    setRegisteredIds(prevState => {\r\n                        return [...prevState, res.data.eventId];\r\n                    });\r\n                    setPaymentSuccess([true, res.data.eventName]);\r\n                }\r\n            })\r\n            .catch(err => {\r\n                // console.log(err);\r\n            })\r\n            .finally(() => {\r\n                setRegisterLoader(false);\r\n                setRegisterForId([false, null, null, null]);\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        switch (cat) {\r\n            case 0:\r\n                axios.get(\"/api/events/type/0\")\r\n                    .then(res => {\r\n                        // console.log(res);\r\n                        setEvents(res.data);\r\n                    })\r\n                    .catch(err => {\r\n                        // console.log(err);\r\n                        setErr(err);\r\n                    })\r\n                    .finally(() => {\r\n                        setLoading(false);\r\n                    })\r\n                break;\r\n            case 1:\r\n                axios.get(\"/api/events/type/1\")\r\n                    .then(res => {\r\n                        setEvents(res.data);\r\n                    })\r\n                    .catch(err => {\r\n                        // console.log(err);\r\n                        setErr(err);\r\n                    })\r\n                    .finally(() => {\r\n                        setLoading(false);\r\n                    })\r\n                break;\r\n            case 2:\r\n                axios.get(\"/api/events/type/2\")\r\n                    .then(res => {\r\n                        setEvents(res.data);\r\n                    })\r\n                    .catch(err => {\r\n                        // console.log(err);\r\n                        setErr(err);\r\n                    })\r\n                    .finally(() => {\r\n                        setLoading(false);\r\n                    })\r\n                break;\r\n            case 3:\r\n                axios.get(\"/api/events/type/3\")\r\n                    .then(res => {\r\n                        setEvents(res.data);\r\n                    })\r\n                    .catch(err => {\r\n                        // console.log(err);\r\n                        setErr(err);\r\n                    })\r\n                    .finally(() => {\r\n                        setLoading(false);\r\n                    })\r\n                break;\r\n\r\n            case 4:\r\n                axios.get(\"/api/events/type/4\")\r\n                    .then(res => {\r\n                        setEvents(res.data);\r\n                    })\r\n                    .catch(err => {\r\n                        // console.log(err);\r\n                        setErr(err);\r\n                    })\r\n                    .finally(() => {\r\n                        setLoading(false);\r\n                    })\r\n                break;\r\n\r\n            default:\r\n\r\n        }\r\n    }, [cat]);\r\n\r\n    useEffect(() => {\r\n        if (props.tokenId && props.googleId) {\r\n            axios.get(`/api/auth/info/${props.tokenId}/${props.googleId}`)\r\n                .then(res => {\r\n                    setRegisteredIds(res.data.registeredeventids);\r\n                })\r\n                .catch(err => {\r\n                    // console.log(err);\r\n                })\r\n        }\r\n    }, [props.tokenId, props.googleId]);\r\n\r\n\r\n    useEffect(() => {\r\n        const url_parts = url.parse(window.location.href, true),\r\n            query = url_parts.query;\r\n\r\n        if (query.eventName && query.payment_id) {\r\n            setRegisteredIds(prevState => {\r\n                return [...prevState, query.eventId];\r\n            })\r\n            setPaymentSuccess([true, query.eventName]);\r\n        }\r\n\r\n    }, []);\r\n\r\n    const handlePaymentSuccessClose = () => {\r\n        setPaymentSuccess([false, null]);\r\n        props.history.replace({\r\n            search: \"\",\r\n        });\r\n    };\r\n\r\n    const handleConfirmation = (eventId, eventNo, eventName) => {\r\n        if (!props.tokenId || !props.googleId) {\r\n            // props.notifyAction(\"login to register\", 3, \"warning\");\r\n            props.authPopup();\r\n        }\r\n        else {\r\n            setRegisterForId([true, eventId, eventNo, eventName]);\r\n        }\r\n    };\r\n\r\n    const paymentSuccessModal = (\r\n        <MDBContainer>\r\n            <MDBModal className=\"registration\" isOpen={paymentSuccess[0]} toggle={handlePaymentSuccessClose}>\r\n                <MDBModalHeader toggle={handlePaymentSuccessClose}>\r\n                    <img className=\"logo-registration\" src=\"/logo/tirutsava_big.png\" />\r\n                </MDBModalHeader>\r\n\r\n                <MDBModalBody>\r\n                    <div className=\"registration__success\">\r\n                        Successfully registered to {paymentSuccess[1]}\r\n                    </div>\r\n                </MDBModalBody>\r\n\r\n            </MDBModal>\r\n        </MDBContainer>\r\n    );\r\n\r\n    const confirmRegistrationModal = (\r\n        <MDBContainer>\r\n            <MDBModal className=\"registration\"\r\n                isOpen={registerForId[0]}\r\n                toggle={() => {\r\n                    setRegisterForId([false, null, null, null]);\r\n                }}\r\n            >\r\n                <MDBModalHeader\r\n                    toggle={() => {\r\n                        setRegisterForId([false, null, null, null]);\r\n                    }}\r\n                >\r\n                    <img className=\"logo-registration\" src=\"/logo/tirutsava_big.png\" />\r\n                </MDBModalHeader>\r\n\r\n                <MDBModalBody>\r\n                    <div className=\"registration__success\">\r\n                        Confirm registration to {registerForId[3]}\r\n                    </div>\r\n                    <div style={{color: \"black\"}}>\r\n                        Note: Please wait for redirect to this page after payment (for paid events)\r\n                    </div>\r\n                    {\r\n                        registerLoader ?\r\n                            <div className=\"spinner-border text-primary\" role=\"status\">\r\n                                <span className=\"sr-only\">Loading...</span>\r\n                            </div>:\r\n                                <div>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                            handleRegister(registerForId[1], registerForId[2])\r\n                                        }}\r\n                                    >Confirm</Button>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                            setRegisterForId([false, null, null, null]);\r\n                                        }}\r\n                                    >Cancel</Button>\r\n                                </div>\r\n                    }\r\n                </MDBModalBody>\r\n\r\n            </MDBModal>\r\n        </MDBContainer>\r\n    );\r\n\r\n    var currentMode = ((new Date()).getHours() < 18 &&\r\n\t\t(new Date()).getHours() >= 6) ?\r\n\t\t'day-mode' :\r\n\t\t'night-mode';\r\n\t// var currentMode = 'day-mode';\r\n\r\n    return (\r\n        <div>\r\n            {paymentSuccessModal}\r\n            {confirmRegistrationModal}\r\n            {\r\n                categories.map(category => {\r\n                    return (\r\n                        <div key={category.id} className={`events-category-${currentMode}`} style={category.id !== cat ? { display: \"none\" } : {}}>\r\n                            {\r\n                                window.innerWidth > 900?\r\n                                <video autoPlay loop muted className=\"events-bg__vid\">\r\n                                    <source src={category.vid} />\r\n                                </video>:\r\n                                null\r\n                            }\r\n                            <div className=\"events__all\">\r\n\r\n                                <div\r\n                                    className=\"close-btn\"\r\n                                    onClick={handleClose}\r\n                                    style={viewEvent === null ? { display: \"none\" } : {}}\r\n                                >\r\n                                    <CancelPresentationOutlined\r\n                                        style={{ fontSize: \"48px\" }}\r\n                                    />\r\n                                </div>\r\n\r\n                                {\r\n                                    loading ?\r\n                                        <div className=\"events__loading\">\r\n                                            <div className=\"spinner-border text-primary\" role=\"status\">\r\n                                                <span className=\"sr-only\">Loading...</span>\r\n                                            </div>\r\n                                        </div> :\r\n                                        events.length === 0 ?\r\n                                            <div className=\"events__comingsoon\">\r\n                                                <h1>Coming Soon</h1>\r\n                                            </div> :\r\n                                            events.map((event, idx) => {\r\n                                                return (\r\n                                                    <Event\r\n                                                        key={idx}\r\n                                                        viewEvent={viewEvent}\r\n                                                        setViewEvent={setViewEvent}\r\n                                                        eventName={event.name}\r\n                                                        eventType={event.typeOfEvent}\r\n                                                        eventDesc={event.description}\r\n                                                        eventPrize={event.eventPrize}\r\n                                                        entryFee={event.entryFee}\r\n                                                        eventTime={event.eventTime}\r\n                                                        maxParticipants={event.maxParticipants}\r\n                                                        preview={viewEvent === null}\r\n                                                        full={viewEvent === idx}\r\n                                                        setFull={() => setViewEvent(idx)}\r\n                                                        handleRegister={() => handleConfirmation(event._id, idx, event.name)}\r\n                                                        alreadyRegistered={registeredIds.includes(event._id)}\r\n                                                        registerLoader={registerLoader}\r\n                                                        registrationOpen={event.registrationOpen}\r\n                                                        submissionLink={event.submissionMail}\r\n                                                        links={event.links}\r\n                                                        redirectRegistrationUrl={event.redirectRegistrationUrl}\r\n                                                        category={cat}\r\n                                                    />\r\n                                                );\r\n                                            })\r\n                                }\r\n\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                })\r\n            }\r\n\r\n            <div\r\n                className=\"bottom__nav\"\r\n                style={viewEvent !== null ? { display: \"none\" } : {}}\r\n            >\r\n                <BottomNavigation\r\n                    value={cat}\r\n                    onChange={(event, newValue) => {\r\n                        setCat(newValue);\r\n                        handleUrl(newValue);\r\n                    }}\r\n                    showLabels\r\n                    className={classes.root}\r\n                >\r\n                    <BottomNavigationAction disabled={loading} label=\"PRE FEST\" style={cat === 0 ? { opacity: 1, color: \"white\" } : { opacity: 0.7, color: \"white\" }} />\r\n                    <BottomNavigationAction disabled={loading} label=\"WORKSHOPS\" style={cat === 1 ? { opacity: 1, color: \"white\" } : { opacity: 0.7, color: \"white\" }} />\r\n                    <BottomNavigationAction disabled={loading} label=\"CULTURAL\" style={cat === 2 ? { opacity: 1, color: \"white\" } : { opacity: 0.7, color: \"white\" }} />\r\n                    <BottomNavigationAction disabled={loading} label=\"TECHNICAL\" style={cat === 3 ? { opacity: 1, color: \"white\" } : { opacity: 0.7, color: \"white\" }} />\r\n                    <BottomNavigationAction disabled={loading} label=\"LITERARY\" style={cat === 4 ? { opacity: 1, color: \"white\" } : { opacity: 0.7, color: \"white\" }} />\r\n                </BottomNavigation>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        tokenId: state.auth.tokenId,\r\n        googleId: state.auth.googleId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        notifyAction: (msg, exp, type) => dispatch(actions.notifyAction(msg, exp, type)),\r\n        authPopup: () => dispatch(actions.authPopup()),\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(EventsPage));","D:\\Tirutsava2021\\client\\src\\components\\navbar\\Burger.js",[],"D:\\Tirutsava2021\\client\\src\\pages\\ContactUs\\Team.js",[],"D:\\Tirutsava2021\\client\\src\\pages\\Faqs\\Header.js",[],"D:\\Tirutsava2021\\client\\src\\pages\\Faqs\\Faq.js",[],"D:\\Tirutsava2021\\client\\src\\components\\Registration\\Registration.js",["185","186"],"import React, { Component } from 'react';\r\nimport GoogleButton from 'react-google-button';\r\nimport \"./Registration.css\";\r\nimport { MDBContainer, MDBModal, MDBModalBody, MDBModalHeader, MDBNotification } from 'mdbreact';\r\nimport GoogleLogin, { GoogleLogout } from 'react-google-login';\r\nimport config from '../../config/keys';\r\nimport axios from 'axios';\r\nimport { TextField } from '@material-ui/core';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport list from './list';\r\n// import DateFnsUtils from '@date-io/date-fns';\r\nimport { Button } from 'react-bootstrap';\r\nimport * as actions from '../../store/actions';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Registration extends Component {\r\n\r\n\tstate = {\r\n\t\tisRegistration: false,\r\n\t\tstate: null,\r\n\t\tcity: null,\r\n\t\tinstitute: null,\r\n\t\tgender: null,\r\n\t\tdob: null,\r\n\t\tgoogleId: null,\r\n\t\ttokenId: null,\r\n\t\tage: null,\r\n\t\tloading: false,\r\n\t\tphone: null\r\n\t};\r\n\r\n\ttoggle = () => {\r\n\t\tthis.props.modalToggle();\r\n\t}\r\n\r\n\tresponseGoogleSuccess = (res) => {\r\n\t\t// console.log(res);\r\n\r\n\t\tthis.setState({\r\n\t\t\tgoogleId: res.googleId,\r\n\t\t\ttokenId: res.tokenId\r\n\t\t})\r\n\r\n\t\taxios.post(\"/api/auth/login\", {\r\n\t\t\ttokenId: res.tokenId,\r\n\t\t\tgoogleId: res.googleId\r\n\t\t})\r\n\t\t\t.then(res => {\r\n\t\t\t\t// console.log(res);\r\n\t\t\t\tif (res.data.newUser) {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tisRegistration: true\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// console.log(res.data);\r\n\t\t\t\t\tthis.props.authSuccessCallback(this.state.tokenId, this.state.googleId);\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tmodal: false\r\n\t\t\t\t\t});\r\n\t\t\t\t\t// alert(\"Logged In Successfully\");\r\n\t\t\t\t\tthis.props.notifyAction(\"Log In Successful\", 3, \"success\");\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\t// console.log(err);\r\n\t\t\t\tthis.props.notifyAction(\"Log In Unsuccessful\", 3, \"warning\");\r\n\t\t\t})\r\n\t\t\t.finally(() => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tloading: false\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t}\r\n\r\n\tresponseGoogleFailure = (err) => {\r\n\t\t// console.log(err);\r\n\t\tthis.setState({\r\n\t\t\tloading: false\r\n\t\t})\r\n\t\tthis.props.notifyAction(\"Log In Unsuccessful\", 3, \"warning\");\r\n\t}\r\n\r\n\thandleRegistration = () => {\r\n\t\tthis.setState({\r\n\t\t\tloading: true\r\n\t\t});\r\n\t\tconst data = {\r\n\t\t\tgoogleId: this.state.googleId,\r\n\t\t\tage: this.state.age,\r\n\t\t\tinstitute: this.state.institute,\r\n\t\t\tcity: this.state.city,\r\n\t\t\tstate: this.state.state,\r\n\t\t\tphone: this.state.phone,\r\n\t\t\tgender: this.state.gender\r\n\t\t}\r\n\t\tconsole.log(data);\r\n\t\taxios.post(\"/api/auth/register\", data)\r\n\t\t\t.then(res => {\r\n\t\t\t\tconsole.log(res);\r\n\t\t\t\tthis.props.authSuccessCallback(this.state.tokenId, this.state.googleId);\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tmodal: false\r\n\t\t\t\t});\r\n\t\t\t\t// alert(\"Logged In Successfully\");\r\n\t\t\t\tthis.props.notifyAction(\"Log In Successful\", 3, \"success\");\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\t// console.log(err);\r\n\t\t\t\tthis.props.notifyAction(\"Registration Unsuccessful\", 3, \"warning\");\r\n\t\t\t})\r\n\t\t\t.finally(() => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tloading: false\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t}\r\n\r\n\tloginArea = (\r\n\t\t<MDBModalBody>\r\n\t\t\t<div className=\"modal-body-registration\">\r\n\t\t\t\t<p className=\"secondary-Heading-registration\">Sign in with your Google account to access all the goodies!</p>\r\n\r\n\t\t\t\t<GoogleLogin\r\n\t\t\t\t\tclientId={config.googleClientID}\r\n\t\t\t\t\trender={renderProps => (\r\n\t\t\t\t\t\t<GoogleButton\r\n\t\t\t\t\t\t\tclassName=\"google-Button-registration\"\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\tloading: true\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\trenderProps.onClick();\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tdisabled={renderProps.disabled}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\tonSuccess={this.responseGoogleSuccess}\r\n\t\t\t\t\tonFailure={this.responseGoogleFailure}\r\n\t\t\t\t\tcookiePolicy={'single_host_origin'}\r\n\t\t\t\t/>\r\n\t\t\t\t<br />\r\n\t\t\t\tNote: IITT students please use your college id to register/login.\r\n\r\n\t\t\t</div>\r\n\t\t</MDBModalBody>\r\n\t);\r\n\r\n\tonStateChange = (event, values) => {\r\n\t\t// console.log(values);\r\n\t\tthis.setState({\r\n\t\t\tstate: values\r\n\t\t})\r\n\t}\r\n\r\n\tonCityChange = (event, values) => {\r\n\t\t// console.log(values);\r\n\t\tthis.setState({\r\n\t\t\tcity: values\r\n\t\t})\r\n\t}\r\n\r\n\tonInstituteChange = (event) => {\r\n\t\t// console.log(values);\r\n\t\tthis.setState({\r\n\t\t\tinstitute: event.target.value\r\n\t\t})\r\n\t}\r\n\r\n\thandleLogoutSuccess = (res) => {\r\n\t\t// console.log(res);\r\n\t\tthis.props.authLogoutCallback();\r\n\t\t// alert(\"Logout successfull\");\r\n\t\tthis.props.notifyAction(\"Log Out Successful\", 3, \"success\");\r\n\t}\r\n\r\n\thandleLogoutFailure = (err) => {\r\n\t\t// console.log(err);\r\n\t\tthis.props.notifyAction(\"Log Out Unsuccessful\", 3, \"warning\");\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.isRegistration) {\r\n\t\t\tthis.loginArea = (\r\n\t\t\t\t<MDBModalBody>\r\n\t\t\t\t\t<div className=\"modal-body-registration\">\r\n\t\t\t\t\t\t<p className=\"secondary-Heading-registration\">Looks like it's your first time here, we need more info.</p>\r\n\r\n\t\t\t\t\t\t<MDBContainer>\r\n\r\n\t\t\t\t\t\t\t<div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\" }}>\r\n\r\n\t\t\t\t\t\t\t\t<div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n\t\t\t\t\t\t\t\t\t<div style={{ flex: 2 }}>\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Phone Number\"\r\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={e => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tphone: e.target.value\r\n\t\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t<div style={{ width: \"5px\", height: \"100%\" }}></div>\r\n\r\n\t\t\t\t\t\t\t\t\t<div style={{ flex: 1 }}>\r\n\t\t\t\t\t\t\t\t\t\t<select className=\"browser-default custom-select\" style={{ height: \"100%\", fontFamily: \"sans-serif\" }}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={e => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (e.target.value === \"Gender\") {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgender: null\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgender: e.target.value\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value={null}>Gender</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"male\">Male</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"female\">Female</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"other\">Other</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div style={{ width: \"100%\", height: \"10px\" }}></div>\r\n\r\n\t\t\t\t\t\t\t\t<Autocomplete\r\n\t\t\t\t\t\t\t\t\tid=\"state\"\r\n\t\t\t\t\t\t\t\t\toptions={list.state_india}\r\n\t\t\t\t\t\t\t\t\tgetOptionLabel={(option) => option}\r\n\t\t\t\t\t\t\t\t\tstyle={{ width: 300 }}\r\n\t\t\t\t\t\t\t\t\trenderInput={(params) => <TextField {...params} label=\"State\" variant=\"outlined\" />}\r\n\t\t\t\t\t\t\t\t\tonChange={this.onStateChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t<div style={{ width: \"100%\", height: \"10px\" }}></div>\r\n\r\n\t\t\t\t\t\t\t\t<Autocomplete\r\n\t\t\t\t\t\t\t\t\tdisabled={!this.state.state}\r\n\t\t\t\t\t\t\t\t\tid=\"city\"\r\n\t\t\t\t\t\t\t\t\toptions={list.city_state[this.state.state]}\r\n\t\t\t\t\t\t\t\t\tgetOptionLabel={(option) => option}\r\n\t\t\t\t\t\t\t\t\tstyle={{ width: 300 }}\r\n\t\t\t\t\t\t\t\t\trenderInput={(params) => <TextField {...params} label=\"City\" variant=\"outlined\" />}\r\n\t\t\t\t\t\t\t\t\tonChange={this.onCityChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t<div style={{ width: \"100%\", height: \"10px\" }}></div>\r\n\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tdisabled={!this.state.city}\r\n\t\t\t\t\t\t\t\t\tlabel=\"Institute\"\r\n\t\t\t\t\t\t\t\t\tid=\"institute\"\r\n\t\t\t\t\t\t\t\t\tonChange={this.onInstituteChange}\r\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t<div style={{ width: \"100%\", height: \"10px\" }}></div>\r\n\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tlabel=\"Age\"\r\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\tonChange={e => {\r\n\t\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\t\tage: e.target.value\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t<div style={{ width: \"100%\", height: \"10px\" }}></div>\r\n\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tonClick={this.handleRegistration}\r\n\t\t\t\t\t\t\t\t\tdisabled={!this.state.city || !this.state.age || !this.state.gender || !this.state.phone || !this.state.institute || !this.state.state}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tRegister\r\n\t\t\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t</MDBContainer>\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</MDBModalBody>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{\r\n\t\t\t\t\t!this.props.isAuthenticated ?\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<div onClick={this.toggle}>{this.props.btnLogin}</div>\r\n\t\t\t\t\t\t\t<MDBContainer >\r\n\t\t\t\t\t\t\t\t{/* BUTTON */}\r\n\t\t\t\t\t\t\t\t{/* MODAL */}\r\n\t\t\t\t\t\t\t\t<MDBModal className=\"registration\" isOpen={this.props.modal} toggle={this.toggle}    >\r\n\t\t\t\t\t\t\t\t\t<MDBModalHeader toggle={this.toggle}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<img className=\"logo-registration\" src=\"/logo/tirutsava_big.png\" />\r\n\t\t\t\t\t\t\t\t\t\t{/* <h5 className=\"signIn-Heading-registration\">Sign In to Tirutsava Brand</h5> */}\r\n\t\t\t\t\t\t\t\t\t</MDBModalHeader>\r\n\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tthis.state.loading?\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"spinner-border text-primary\" role=\"status\">\r\n                                                <span className=\"sr-only\">Loading...</span>\r\n                                            </div>\r\n\t\t\t\t\t\t\t\t\t\t</div>:\r\n\t\t\t\t\t\t\t\t\t\tthis.loginArea\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t{/* <MDBModalFooter>\r\n\t\t\t\t\t<MDBBtn color=\"secondary\" onClick={this.toggle}>Close</MDBBtn>\r\n\t\t\t\t\t<MDBBtn color=\"primary\">Save changes</MDBBtn>\r\n\t\t\t\t</MDBModalFooter> */}\r\n\t\t\t\t\t\t\t\t</MDBModal>\r\n\t\t\t\t\t\t\t</MDBContainer>\r\n\t\t\t\t\t\t</> :\r\n\t\t\t\t\t\t<GoogleLogout\r\n\t\t\t\t\t\t\tclientId={config.googleClientID}\r\n\t\t\t\t\t\t\trender={renderProps => (\r\n\t\t\t\t\t\t\t\t<div disabled={renderProps.disabled} onClick={renderProps.onClick}>\r\n\t\t\t\t\t\t\t\t\t{this.props.btnLogout}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\tbuttonText=\"Logout\"\r\n\t\t\t\t\t\t\tonLogoutSuccess={this.handleLogoutSuccess}\r\n\t\t\t\t\t\t\tonFailure={this.handleLogoutFailure}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tisAuthenticated: state.auth.tokenId !== null,\r\n\t\tmodal: state.auth.authPopup,\r\n\t\tauthMsg: state.auth.msg,\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {\r\n\t\tauthSuccessCallback: (tokenId, googleId) => dispatch(actions.authSuccess(tokenId, googleId)),\r\n\t\tauthLogoutCallback: () => dispatch(actions.logout()),\r\n\t\tnotifyAction: (msg, exp, notifyType) => dispatch(actions.notifyAction(msg, exp, notifyType)),\r\n\t\tmodalToggle: () => dispatch(actions.authPopup()),\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Registration);","D:\\Tirutsava2021\\client\\src\\pages\\Sponsors\\SponsorDetails\\SponsorDetail.js",["187"],"import React from \"react\";\r\nimport { MDBCol, MDBContainer, MDBRow } from \"mdbreact\";\r\nimport \"./SponsorDetail.css\"\r\nimport MemberImage from './MemberImage/SponsorImage';\r\n\r\nclass SponsorDetail extends React.Component {\r\n  render() {\r\n    return (\r\n      <MDBContainer className=\"mt-5\" className=\"root-SponsorDetail\" id={this.props.sectionName}>\r\n        <MDBRow>\r\n            <h1 className=\"team-name-SponsorDetail\">{this.props.sectionName}</h1>\r\n        </MDBRow>\r\n\r\n        {/* <MDBRow className=\"mt-4\"> */}\r\n          {\r\n\r\n            this.props.sponsors.map((sponsor, i) => {\r\n              return (\r\n                <MDBCol md=\"6\" key={i}>\r\n                  <MemberImage {...sponsor} />\r\n                </MDBCol>\t\t\t\r\n              );\r\n            })\r\n          }\r\n        {/* </MDBRow> */}\r\n\r\n        {\r\n          this.props.sponsors.length === 0?\r\n          \"TBA\": null\r\n        }\r\n        {/* TBA */}\r\n      </MDBContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SponsorDetail;","D:\\Tirutsava2021\\client\\src\\pages\\ContactUs\\TeamDetails\\TeamDetails.js",["188"],"import React from \"react\";\r\nimport { MDBContainer, MDBRow, MDBCol } from \"mdbreact\";\r\nimport MemberImage from \"./MemberImage/MemberImage\";\r\nimport \"./TeamDetails.css\";\r\n\r\nconst TeamDetails = (props) => {\r\n\treturn (\r\n\t\t<MDBContainer className=\"mt-5\" className=\"root-TeamDetails\" id={props.sectionName}>\r\n\t\t\t<MDBRow>\r\n\t\t\t\t<h1 className=\"team-name-TeamDetails\">{props.sectionName}</h1>\r\n\t\t\t</MDBRow>\r\n\t\t\t<MDBRow className=\"mt-4\">\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\tprops.heads.map((head, i) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<MDBCol md=\"6\" key={i}>\r\n\t\t\t\t\t\t\t\t<MemberImage {...head} />\r\n\t\t\t\t\t\t\t</MDBCol>\t\t\t\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t</MDBRow>\r\n\t\t</MDBContainer>\r\n\t);\r\n}\r\n\r\nexport default TeamDetails;","D:\\Tirutsava2021\\client\\src\\components\\HomepagePhone\\homepage.phone.js",["189","190","191"],"import React , {useState} from 'react';\r\nimport './homepage.phone.css';\r\nimport Navbar from '../navbar/Navbar';\r\nimport { withRouter } from 'react-router-dom';\r\n// import NavbarNew from './../../pages/Homepage/Navbar/Navbarnew';\r\nvar currentMode = ((new Date()).getHours() < 18 &&\r\n(new Date()).getHours() >= 6) ? \r\n'day-mode' : \r\n'night-mode';\r\n\r\n// var currentMode = \"day-mode\";\r\n\r\n\r\nconst HomepagePhone = props => {\r\n    var [boolshow,setbool] = useState(false)\r\nvar clickedham = () => {\r\n    setbool(!boolshow)\r\n}\r\n\r\n    return ( \r\n        <React.Fragment>\r\n            <div>\r\n                <Navbar />\r\n            </div>\r\n\r\n            <div>\r\n                <img src={`city-${currentMode}.png`} style={{width: \"100%\", position: \"fixed\", bottom: 0, left: 0}} />\r\n            </div>\r\n\r\n            <div className={`phone-body-${currentMode} conatainer-fluid`}>\r\n                {/* <div className=\"navbar-section\"><NavbarNewphone boolshownav={boolshow}></NavbarNewphone></div> */}\r\n                    <div className=\"tirutsava-poster\">\r\n                        <img src=\"/homepage/tirutsava_poster.png\" style={{width: \"100%\"}} />\r\n                    </div>\r\n\r\n                    <div className=\"tirutsava-box \"><p className={`tirutsava-title-${currentMode}`}>Events</p></div>\r\n                    <div className=\"img-class\">\r\n                        <img className=\"images-phone-slider\" src=\"/homepage/games.png\" alt=\"Events\"/>\r\n                    </div>\r\n                    <div className=\"phone-cont-lrn\">\r\n                        <div className={`texts-${currentMode}`}>\r\n                            With 30+ events Tirutsava 2021 brings a lot of fun, entertainment and learning. Participate in events and win \r\n\t\t\t\t\t\t\tcool prizes, registration for prefest events is now open. Visit the link below.\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"btn-box\"\r\n                        onClick={() => {\r\n                            props.history.push('/events');\r\n                        }}\r\n                    ><button className=\"discover-btn\">Discover</button></div>\r\n\r\n                    <div className=\"tirutsava-box\"><p className={`tirutsava-title-${currentMode}`}>Workshops</p></div>\r\n                    <div className=\"img-class\">\r\n                        <img className=\"images-phone-slider\" src=\"/homepage/technical2.png\" alt=\"Events\"/>\r\n                    </div>\r\n                    <div className=\"phone-cont-lrn\">\r\n                        <div className={`texts-${currentMode}`}>\r\n                            Get informative this Tirutsava with some cool workshops.\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"btn-box\"\r\n                        onClick={() => {\r\n                            props.history.push('/events/workshops');\r\n                        }}\r\n                    ><button className=\"discover-btn\">Discover</button></div>\r\n                    {/* <div className=\"btn-box\"><button className=\"discover-btn\">Discover</button></div> */}\r\n\r\n                    <div className=\"tirutsava-box\"><p className={`tirutsava-title-${currentMode}`}>Proshows</p></div>\r\n                    <div className=\"img-class\">\r\n                        <img className=\"images-phone-slider\" src=\"/homepage/dj.png\" alt=\"Events\"/>\r\n                    </div>\r\n                    <div className=\"phone-cont-lrn\">\r\n                        <div className={`texts-${currentMode}`}>\r\n                            Check out the exiting proshows brought to you by Tirutsava 2021.\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"btn-box\"\r\n                        onClick={() => {\r\n                            props.history.push('/proshows');\r\n                        }}\r\n                    ><button className=\"discover-btn\">Discover</button>\r\n                    </div>\r\n                    {/* <div className=\"btn-box\"><button className=\"discover-btn\">Discover</button></div> */}\r\n\r\n            </div>\r\n        </React.Fragment>\r\n     );\r\n}\r\n \r\nexport default withRouter(HomepagePhone);","D:\\Tirutsava2021\\client\\src\\pages\\Events\\Event.js",["192","193"],"import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport './EventsPage.css';\r\n\r\nconst Event = props => {\r\n\r\n    let name = props.eventName;\r\n    name = name.toLowerCase();\r\n    name = name.replaceAll(\" \", \"_\");\r\n\r\n    const desc = props.eventDesc.split(\"///\");\r\n\r\n    const prizes = props.eventPrize;\r\n\r\n    const dates = props.eventTime.split(\"///\");\r\n\r\n    const width = window.innerWidth;\r\n\r\n    const colors = [\"#007FFF\", \"#0a2351\", \"#f94d00\", \"#6a5acd\", \"#FF1476\", \"#009000\"];\r\n\r\n    const randomColor = () => {\r\n        const rantint = Math.floor(Math.random()*5);\r\n        return colors[rantint];\r\n    }\r\n\r\n    return (\r\n        <div\r\n            // className={props.viewEvent === null? \"event__preview\": viewEvent === 0? \"event__full\": \"event__hide\"}\r\n            className=\"event__preview\"\r\n            style={\r\n                width < 900?\r\n                    props.full ?\r\n                    { backgroundColor: randomColor(), opacity: 1 } :\r\n                    !props.preview ?\r\n                        { flex: 0 } :\r\n                        { backgroundColor: randomColor(), opacity: 0.8 }\r\n                :\r\n                props.full ?\r\n                { backgroundImage: `url(\"/events/${name}.jpg\")`, opacity: 1 } :\r\n                !props.preview ?\r\n                    { flex: 0 } :\r\n                    { background: `linear-gradient(rgba(0,0,0,0.5), rgba(0,0,0,0.5)), url(\"/events/${name}.jpg\")` }\r\n            }\r\n            onClick={props.setFull}\r\n        >\r\n\r\n            <div\r\n                className=\"event__preview__name\"\r\n                style={!props.preview ? { display: \"none\" } : {}}\r\n            >\r\n                {props.eventName.toUpperCase()}\r\n            </div>\r\n\r\n            <div\r\n                className=\"event__details\"\r\n                style={!props.full ? { display: \"none\" } : {}}\r\n            >\r\n                <div className=\"event__name\">\r\n                    <h1>{props.eventName.toUpperCase()}</h1>\r\n                </div>\r\n\r\n                <div className=\"event__details__tab\">\r\n                    <div className=\"event__type\">{props.eventType}</div>\r\n                    <div className=\"event__info\">\r\n\r\n                        <div className=\"event__registration_section\">\r\n                            <div className=\"event__entry\">\r\n                                {\r\n                                    props.entryFee === 0 ?\r\n                                        <div>No Entry Fee</div> :\r\n                                        <div>Entry: Rs. {props.entryFee}</div>\r\n                                }\r\n                            </div>\r\n                            <div className=\"event__details__btn\">\r\n                                {\r\n                                    props.registerLoader ?\r\n                                        <a\r\n                                            href=\"#\"\r\n                                        >\r\n                                            <Button\r\n                                                onClick={props.handleRegister}\r\n                                                disabled\r\n                                            >\r\n                                                Registering...\r\n                                            </Button>\r\n                                        </a> :\r\n                                        <a\r\n                                            href={props.redirectRegistrationUrl || \"#\"}\r\n                                        >\r\n                                            <Button\r\n                                                onClick={props.redirectRegistrationUrl? null: props.handleRegister}\r\n                                                disabled={props.alreadyRegistered || !props.registrationOpen}\r\n                                            >\r\n                                                {\r\n                                                    props.alreadyRegistered ?\r\n                                                        \"Registered\" :\r\n                                                        \"Register\"\r\n                                                }\r\n                                            </Button>\r\n                                        </a>\r\n                                }\r\n                                <a href={`/events/${name}.pdf`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                    <Button>Rules</Button>\r\n                                </a>\r\n                                <a href={`/events/${name}.jpg`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                    <Button>Poster</Button>\r\n                                </a>\r\n                            </div>\r\n                            <div style={{ textAlign: \"left\" }}>\r\n                                * Events cannot be unregistered\r\n                                <br />\r\n                                Note: If the participation is very less, the prize money will be reduced by half of the total amount\r\n                                {\r\n                                    !props.registrationOpen ?\r\n                                        <div style={{ fontSize: \"20px\" }}>\r\n                                            <br />\r\n                                            Registrations Closed\r\n                                        </div> :\r\n                                        null\r\n                                }\r\n                                {\r\n                                    props.alreadyRegistered && props.submissionLink !== \"\"?\r\n                                    <div style={{fontSize: \"20px\", fontWeight: \"bold\"}}>\r\n                                        Submission Link:\r\n                                        <a href={props.submissionLink} target = \"_blank\" rel = \"noopener noreferrer\"\r\n                                            className=\"event__submission__link\"\r\n                                        > Click Here</a>\r\n                                    </div>:\r\n                                    null\r\n                                }\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col__separator\"></div>\r\n\r\n                        <div className=\"event__details__main\">\r\n\r\n                            <div className=\"event__desc\">\r\n                                {\r\n                                    desc.map((line, idx) => {\r\n                                        if (line === \" \") {\r\n                                            return <br key={idx} />\r\n                                        }\r\n                                        return <div key={idx}>{line}</div>\r\n                                    })\r\n                                }\r\n                                {\r\n                                    props.links.forEach((link, idx) => {\r\n                                        return (\r\n                                            <div key={idx}>\r\n                                                {link.desc}:\r\n                                                <a href={link.href}\r\n                                                ></a>\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n\r\n                            <div className=\"event__prize\">\r\n                                {\r\n                                    prizes.map((prize, idx) => {\r\n                                        // console.log(prize);\r\n                                        if (idx === 0) {\r\n                                            return <div key={idx}>Winner: {prize}</div>\r\n                                        }\r\n                                        else if (idx === 1) {\r\n                                            return <div key={idx}>Runner: {prize}</div>\r\n                                        }\r\n                                        else if (idx === 2) {\r\n                                            return <div key={idx}>3rd place: {prize}</div>\r\n                                        }\r\n                                        return <div key={idx}>{idx+1}th place: {prize}</div>\r\n                                    })\r\n                                }\r\n                            </div>\r\n\r\n                            <div className=\"event__time\">\r\n                                Event schedule info:\r\n                                {\r\n                                    dates.map((date, idx) => {\r\n                                        return <div key={idx}>{date}</div>\r\n                                    })\r\n                                }\r\n                            </div>\r\n\r\n                            <div className=\"event__participants\">\r\n\r\n                                {\r\n                                    props.category !== 1?\r\n                                    props.maxParticipants > 1 ?\r\n                                        <div>\r\n                                            Max. participants (per team): {props.maxParticipants}\r\n                                            <div>\r\n                                                <em>\r\n                                                    * Only team leader has to register\r\n                                                </em>\r\n                                            </div>\r\n                                        </div> :\r\n                                        <div>\r\n                                            <div>Participants info.</div>\r\n                                            Single player event\r\n                                        </div>:\r\n                                        null\r\n                                }\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Event;","D:\\Tirutsava2021\\client\\src\\components\\Registration\\list.js",[],"D:\\Tirutsava2021\\client\\src\\pages\\Faqs\\searchbar\\search.js",[],"D:\\Tirutsava2021\\client\\src\\pages\\ContactUs\\TeamDetails\\MemberImage\\MemberImage.js",["194"],"import React from 'react';\r\nimport { MDBMask, MDBView, MDBIcon } from \"mdbreact\";\r\nimport \"./MemberImage.css\"\r\n\r\n\r\nconst MemberImage=(props)=>{\r\n  // console.log(props)\r\n    return (\r\n        <div className=\"root-MemberImage rounded\">\r\n        <MDBView hover zoom>\r\n              <img\r\n                src={props.url || \"/heads/dummy_person.png\"}\r\n                className=\"img-fluid memberImage rounded\"\r\n                alt=\"\"\r\n              />\r\n              \r\n              <MDBMask className=\"mask-MemberImage\" overlay=\"black-strong\">\r\n                <a className=\"font-weight-bold email-MemberImage\" href={props.email}\r\n                target=\"_blank\" >\r\n                <MDBIcon  size=\"sm\"  icon=\"envelope\" />  {props.email}\r\n                </a>\r\n\r\n                <p className=\"font-weight-bold email-MemberImage\"  >\r\n                <MDBIcon  size=\"sm\"  icon=\"mobile-alt\" />  +91-{props.phone}\r\n                </p>\r\n                <div style={{display:\"flex\",justifyContent:\"center\",alignItems:\"center\"}}>\r\n              </div>\r\n              \r\n              \r\n              </MDBMask>\r\n        </MDBView>\r\n        <h4 className=\"font-weight-bold my-4 name-MemberImage \" >\r\n            {props.name}\r\n        </h4>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default MemberImage;","D:\\Tirutsava2021\\client\\src\\pages\\Merch\\Merch.js",["195","196"],"import React, { useEffect, useState } from 'react';\r\nimport MerchForm from './Form';\r\nimport './Merch.css';\r\nimport MerchPreview from './Preview';\r\nimport * as actions from '../../store/actions';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { MDBContainer, MDBModal, MDBModalBody, MDBModalHeader } from 'mdbreact';\r\nimport url from 'url';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nconst MerchPage = (props) => {\r\n\r\n    var currentMode = ((new Date()).getHours() < 18 &&\r\n\t\t(new Date()).getHours() >= 6) ?\r\n\t\t'day-mode' :\r\n\t\t'night-mode';\r\n\t// var currentMode = 'day-mode';\r\n\r\n    const [hoodieSize, setHoodieSize] = useState(null);\r\n    const [addr, setAddr] = useState(null);\r\n    const [pincode, setPincode] = useState(null);\r\n\r\n    const [openConfirmation, setOpenConfirmation] = useState(false);\r\n    const [openPaymentSuccess, setOpenPaymentSuccess] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const handleConfirmation = () => {\r\n        setLoading(true);\r\n        axios.post(`/api/merch/buymerch/${props.tokenId}/${props.googleId}`, {\r\n            address: addr,\r\n            hoodieSize,\r\n            pincode\r\n        }).then(res => {\r\n            console.log(res.data);\r\n            if (res.data.redirectUrl) {\r\n                window.location.href = res.data.redirectUrl\r\n            }\r\n        })\r\n            .catch(err => {\r\n                // console.log(err);\r\n            })\r\n            .finally(() => {\r\n                setLoading(false);\r\n            })\r\n    };\r\n\r\n    useEffect(() => {\r\n        const url_parts = url.parse(window.location.href, true),\r\n            query = url_parts.query;\r\n\r\n        if (query.payment_id) {\r\n            setOpenPaymentSuccess(true);\r\n        }\r\n    }, []);\r\n\r\n    const paymentSuccessModal = (\r\n        <MDBContainer>\r\n            <MDBModal className=\"registration\" isOpen={openPaymentSuccess} toggle={() => {\r\n                props.history.replace({\r\n                    search: \"\",\r\n                });\r\n                setOpenPaymentSuccess(false);\r\n            }}>\r\n                <MDBModalHeader toggle={() => {\r\n                    props.history.replace({\r\n                        search: \"\",\r\n                    });\r\n                    setOpenPaymentSuccess(false);\r\n                }}>\r\n                    <img className=\"logo-registration\" src=\"/logo/tirutsava_big.png\" />\r\n                </MDBModalHeader>\r\n\r\n                <MDBModalBody>\r\n                    <div className=\"registration__success\">\r\n                        Successfully Purchased Merchandise\r\n                    </div>\r\n                </MDBModalBody>\r\n\r\n            </MDBModal>\r\n        </MDBContainer>\r\n    );\r\n\r\n    const confirmMerchandise = (\r\n        <MDBContainer>\r\n            <MDBModal className=\"registration\"\r\n                isOpen={openConfirmation}\r\n                toggle={() => {\r\n                    setOpenConfirmation(false);\r\n                }}\r\n            >\r\n                <MDBModalHeader\r\n                    toggle={() => {\r\n                        setOpenConfirmation(false);\r\n                    }}\r\n                >\r\n                    <img className=\"logo-registration\" src=\"/logo/tirutsava_big.png\" />\r\n                </MDBModalHeader>\r\n\r\n                <MDBModalBody>\r\n                    <div className=\"registration__success\">\r\n                        Confirmation for Merchandise Purchase\r\n                    </div>\r\n                    <div style={{ color: \"black\" }}>\r\n                        Note: Please wait for redirect to this page after payment\r\n                    </div>\r\n                    {\r\n                        loading ?\r\n                            <div className=\"spinner-border text-primary\" role=\"status\">\r\n                                <span className=\"sr-only\">Loading...</span>\r\n                            </div> :\r\n                            <div>\r\n                                <Button\r\n                                    onClick={() => {\r\n                                        handleConfirmation();\r\n                                    }}\r\n                                >Confirm</Button>\r\n                                <Button\r\n                                    onClick={() => {\r\n                                        setOpenConfirmation(false);\r\n                                    }}\r\n                                >Cancel</Button>\r\n                            </div>\r\n                    }\r\n                </MDBModalBody>\r\n\r\n            </MDBModal>\r\n        </MDBContainer>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            {confirmMerchandise}\r\n            {paymentSuccessModal}\r\n\r\n            <div className={`merch-page-${currentMode}`}>\r\n                <div className=\"merch__preview\">\r\n                    <MerchPreview />\r\n                </div>\r\n                <div className=\"merch__form\">\r\n                    <MerchForm\r\n                        handleConfirmation={() => {\r\n                            if (!props.tokenId || !props.googleId) {\r\n                                // props.notifyAction(\"login to register\", 3, \"warning\");\r\n                                props.authPopup();\r\n                            }\r\n                            else {\r\n                                setOpenConfirmation(true);\r\n                            }\r\n                        }}\r\n                        setHoodieSize={setHoodieSize}\r\n                        setAddr={setAddr}\r\n                        setPincode={setPincode}\r\n                        disabled={!addr || !pincode || !hoodieSize}\r\n                    />\r\n                </div>\r\n            </div>\r\n            {/* <div style={{display: \"flex\", justifyContent: \"center\", width: \"100%\", height: \"100vh\", alignItems: \"center\"}}>\r\n                <h1>Back Soon</h1>\r\n            </div> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        tokenId: state.auth.tokenId,\r\n        googleId: state.auth.googleId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        notifyAction: (msg, exp, type) => dispatch(actions.notifyAction(msg, exp, type)),\r\n        authPopup: () => dispatch(actions.authPopup()),\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(MerchPage));","D:\\Tirutsava2021\\client\\src\\pages\\Merch\\Form.js",["197","198"],"import React from \"react\";\r\nimport './Merch.css';\r\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBCard, MDBCardBody, MDBIcon } from 'mdbreact';\r\n\r\nconst MerchForm = props => {\r\n    return (\r\n        <MDBContainer>\r\n            <MDBRow style={{display: \"flex\", justifyContent: \"center\"}}>\r\n                <MDBCol md=\"8\">\r\n                    <MDBCard>\r\n                        <MDBCardBody>\r\n                            <div\r\n                                style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\", color: \"black\"}}\r\n                            >   \r\n                                No longer available\r\n                            </div>\r\n                        </MDBCardBody>\r\n                    </MDBCard>\r\n                </MDBCol>\r\n            </MDBRow>\r\n        </MDBContainer>\r\n    );\r\n};\r\n\r\nexport default MerchForm;","D:\\Tirutsava2021\\client\\src\\pages\\Merch\\Preview.js",[],"D:\\Tirutsava2021\\client\\src\\pages\\Sponsors\\SponsorDetails\\MemberImage\\SponsorImage.js",["199","200"],"import React from 'react';\r\nimport { MDBMask, MDBView,MDBBtn,MDBIcon } from \"mdbreact\";\r\nimport \"./SponsorImage.css\"\r\n\r\n\r\nconst SponsorImage=(props)=>{\r\n    return (\r\n        <div className=\"root-SponsorImage rounded\">\r\n        <MDBView hover zoom>\r\n              <img\r\n                src={props.url}\r\n                className=\"img-fluid SponsorImage rounded\"\r\n                alt=\"\"\r\n              />\r\n              \r\n              <MDBMask className=\"mask-SponsorImage\" overlay=\"black-strong\">\r\n                <a className=\"font-weight-bold email-SponsorImage\" href={props.href}\r\n                target=\"_blank\" >\r\n                <MDBIcon  size=\"sm\"  icon=\"link\" />{props.href}\r\n                </a>\r\n                <div style={{display:\"flex\",justifyContent:\"center\",alignItems:\"center\"}}>\r\n              </div>\r\n              \r\n              \r\n              </MDBMask>\r\n        </MDBView>\r\n        <h4 className=\"font-weight-bold my-4 name-SponsorImage \" >\r\n            {props.name}\r\n        </h4>\r\n        {\r\n          !props.type?\r\n          null:\r\n          <h5 style={{color: \"black\"}} >\r\n              {props.type} Partner\r\n          </h5>\r\n        }\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default SponsorImage;","D:\\Tirutsava2021\\client\\src\\pages\\Sponsors\\SponsorsInfo.js",[],"D:\\Tirutsava2021\\client\\src\\pages\\proshows\\Proshows.js",[],"D:\\Tirutsava2021\\client\\src\\pages\\proshows\\Proshow.js",[],{"ruleId":"201","replacedBy":"202"},{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","severity":1,"message":"206","line":19,"column":39,"nodeType":"207","endLine":19,"endColumn":44},{"ruleId":"208","severity":1,"message":"209","line":96,"column":5,"nodeType":"210","endLine":99,"endColumn":7},{"ruleId":"211","severity":1,"message":"212","line":114,"column":12,"nodeType":"213","messageId":"214","endLine":114,"endColumn":15},{"ruleId":"208","severity":1,"message":"209","line":291,"column":21,"nodeType":"210","endLine":291,"endColumn":88},{"ruleId":"208","severity":1,"message":"209","line":317,"column":21,"nodeType":"210","endLine":317,"endColumn":88},{"ruleId":"211","severity":1,"message":"215","line":4,"column":64,"nodeType":"213","messageId":"214","endLine":4,"endColumn":79},{"ruleId":"208","severity":1,"message":"209","line":315,"column":11,"nodeType":"210","endLine":315,"endColumn":78},{"ruleId":"205","severity":1,"message":"206","line":9,"column":38,"nodeType":"207","endLine":9,"endColumn":68},{"ruleId":"205","severity":1,"message":"206","line":8,"column":34,"nodeType":"207","endLine":8,"endColumn":62},{"ruleId":"211","severity":1,"message":"216","line":16,"column":5,"nodeType":"213","messageId":"214","endLine":16,"endColumn":15},{"ruleId":"208","severity":1,"message":"209","line":27,"column":17,"nodeType":"210","endLine":27,"endColumn":119},{"ruleId":"208","severity":1,"message":"209","line":33,"column":25,"nodeType":"210","endLine":33,"endColumn":93},{"ruleId":"217","severity":1,"message":"218","line":77,"column":41,"nodeType":"210","endLine":79,"endColumn":42},{"ruleId":"219","severity":1,"message":"220","line":152,"column":49,"nodeType":"210","endLine":153,"endColumn":50},{"ruleId":"221","severity":1,"message":"222","line":19,"column":17,"nodeType":"207","endLine":19,"endColumn":32},{"ruleId":"208","severity":1,"message":"209","line":72,"column":21,"nodeType":"210","endLine":72,"endColumn":88},{"ruleId":"208","severity":1,"message":"209","line":98,"column":21,"nodeType":"210","endLine":98,"endColumn":88},{"ruleId":"211","severity":1,"message":"223","line":3,"column":40,"nodeType":"213","messageId":"214","endLine":3,"endColumn":46},{"ruleId":"211","severity":1,"message":"224","line":3,"column":70,"nodeType":"213","messageId":"214","endLine":3,"endColumn":77},{"ruleId":"211","severity":1,"message":"223","line":2,"column":27,"nodeType":"213","messageId":"214","endLine":2,"endColumn":33},{"ruleId":"221","severity":1,"message":"222","line":18,"column":17,"nodeType":"207","endLine":18,"endColumn":32},"no-native-reassign",["225"],"no-negated-in-lhs",["226"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'err' is assigned a value but never used.","Identifier","unusedVar","'MDBNotification' is defined but never used.","'clickedham' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'MDBBtn' is defined but never used.","'MDBIcon' is defined but never used.","no-global-assign","no-unsafe-negation"]